name: cobalt-update

on:
  schedule:
    - cron:  '0 0 * * 1,3,5'

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  update:
    name: 'Update cobalt'
    runs-on: ubuntu-latest

    outputs:
      previous: ${{ steps.update.outputs.previous }}
      version: ${{ steps.update.outputs.version }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Git submodule update
        id: update
        run: |
          echo "previous=$(cat cobalt/web/package.json | jq -r '.version')" >> $GITHUB_OUTPUT
          git submodule update --remote 
          echo "version=$(cat cobalt/web/package.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - name: Commit update
        if: ${{ steps.update.outputs.previous != steps.update.outputs.version }}
        run: |
          git add cobalt
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "dep(cobalt): update to version ${{ steps.update.outputs.version }}"
          git tag ${{ steps.update.outputs.version }} && git push && git push --tags

  publish:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    needs: update
    if: ${{ needs.update.outputs.previous != needs.update.outputs.version || github.event_name == 'workflow_dispatch' }}

    name: 'Publish Docker image'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: >-
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.update.outputs.version }}
          build-args: |
            WEB_HOST=${{ vars.COBALT_WEB_HOST }}
            WEB_PLAUSIBLE_HOST=${{ vars.COBALT_WEB_PLAUSIBLE_HOST }}
            WEB_DEFAULT_API=${{ vars.COBALT_WEB_DEFAULT_API }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true